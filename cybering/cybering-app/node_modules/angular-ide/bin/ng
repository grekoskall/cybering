#!/usr/bin/env node

if (process.env['SKIP_DRIVE_NORMALIZATION'] === undefined) {
  require('../lib/windowsPathResolvePatch')();
}

const path = require('path');
const semver = require('semver');
const fs = require('fs');

const enableDebugFile = fs.existsSync('angular-ide.debug');

if (enableDebugFile) {
  process.env.DEBUG = 'angular-ide';
}

const getNGCLIManifest = require('../lib/CLUtils').getNGCLIManifest;
const getNGCLIPath = require('../lib/CLUtils').getNGCLIPath;

const ngCLIPKG = getNGCLIManifest();

const TAG = '[angular-ide]';

if (ngCLIPKG) {
  const normalizePackageVersion = require('../lib/CLUtils').normalizePackageVersion;
  const ngCLIPKGName = ngCLIPKG.name;
  const ngCLIPath = getNGCLIPath(ngCLIPKGName);

  const disableCodeLiveParamIndex = process.argv.indexOf('--disable-codelive');
  if (disableCodeLiveParamIndex === -1) {
    ngCLIPKG.version = normalizePackageVersion(ngCLIPKG.version);
    const patchServeCommand = require('../addon/commands/serve').patchServeCommand

    if (semver.satisfies(ngCLIPKG.version, '>=1.0.0-beta.25') ||
      semver.satisfies(ngCLIPKG.version, '>=1.0.0') ||
      semver.satisfies(ngCLIPKG.version, '>=1.1.0-beta') ||
      semver.satisfies(ngCLIPKG.version, '>=1.2.0-beta') ||
      semver.satisfies(ngCLIPKG.version, '>=1.3.0-beta') ||
      semver.satisfies(ngCLIPKG.version, '>=1.4.0-beta') ||
      semver.satisfies(ngCLIPKG.version, '>=1.5.0-beta') ||
      semver.satisfies(ngCLIPKG.version, '>=1.6.0-beta') ||
      semver.satisfies(ngCLIPKG.version, '>=1.7.0-beta') ||
      // From now on, we try to patch all new versions of angular cli versions (even pre-releases)
      semver.satisfies(semver.coerce(ngCLIPKG.version), '>=8.*.*')
    ) {
      if (
        semver.satisfies(ngCLIPKG.version, '>=1.1.1') ||
        semver.satisfies(ngCLIPKG.version, '>=1.2.0-beta.1')||
        semver.satisfies(ngCLIPKG.version, '>=1.3.0-beta') ||
        semver.satisfies(ngCLIPKG.version, '>=1.4.0-beta') ||
        semver.satisfies(ngCLIPKG.version, '>=1.5.0-beta') ||
        semver.satisfies(ngCLIPKG.version, '>=1.6.0-beta') ||
        semver.satisfies(ngCLIPKG.version, '>=1.7.0-beta') ||
        // From now on, we try to patch all new versions of angular cli versions (even pre-releases)
        semver.satisfies(semver.coerce(ngCLIPKG.version), '>=8.*.*')

      ) {
        patchServeCommand(ngCLIPKG.version);

        require('../../@angular/cli/bin/ng');

      } else {
        patchServeCommand(ngCLIPKG.version);

        const Project = require(path.normalize(path.resolve(__dirname, `../../${ngCLIPath}/ember-cli/lib/models/project`)));

        Project.prototype.originalInitializeAddons = Project.prototype.initializeAddons;

        Project.prototype.initializeAddons = function monkeyInitializeAddons() {
          this.originalInitializeAddons();

          const cliPkg = require(path.resolve(__dirname, '../package.json'));
          const Addon = require(`../../${ngCLIPath}/ember-cli/lib/models/addon`);
          const angularIDEPath = path.join(__dirname, '../../angular-ide');
          const Constructor = Addon.lookup({
            name: 'angular-ide',
            path: angularIDEPath,
            pkg:  cliPkg,
          });

          const addon = new Constructor(this.addonParent, this);
          this.addons.push(addon);
        };
      }

      // run original ng serve
      require(`${ngCLIPath}/bin/ng`);
    } else {
      console.log(TAG, 'Required version not satisfied, doing nothing!');
    }
  } else {
    process.argv.splice(disableCodeLiveParamIndex, 1);

    // run original ng serve
    require(`${ngCLIPath}/bin/ng`);
  }
} else {
  console.log(TAG, 'Unable to detect Angular CLI!!!');
}

